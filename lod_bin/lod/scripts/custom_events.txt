// No spaces in event names, max length 32
// All strings are case sensitive
//
// valid data key types are:
//   string : a zero terminated string
//   bool   : unsigned int, 1 bit
//   byte   : unsigned int, 8 bit
//   short  : signed int, 16 bit
//   long   : signed int, 32 bit
//   float  : float, 32 bit
//   uint64 : unsigned int 64 bit
//   local  : any data, but not networked to clients
//
// following key names are reserved:
//   local      : if set to 1, event is not networked to clients
//   unreliable : networked, but unreliable
//   suppress   : never fire this event
//   time	: firing server time
//   eventid	: holds the event ID

"CustomEvents"
{
	// Fired when a skill is banned
	"lod_ban"
	{
		"skill"	"string"
	}

    // Fired when the game starts to tell cleints about the voting options
    "lod_voting_info"
    {
        "slaveID"       "byte"  // The ID of the player who owns the vote, or -1 for free for all
    }

    // Fired when the game starts to tell clients about the gamemode
    "lod_picking_info"
    {
        "startTime"     "float"
        "banningTime"   "float"
        "pickingTime"   "float"
        "slots"         "byte"
        "skills"        "byte"
        "ults"          "byte"
        "trolls"        "byte"
        "hostBanning"   "byte"
        "hideSkills"    "byte"
        "stage"         "byte"
        "s1"            "byte"  // Is this a source1 game? (affects ability pool)
    }

    // A player stuck a skill into a slot
    "lod_skill"
    {
        "playerID"      "byte"
        "slotNumber"    "byte"
        "skillID"       "short"
        "playerSlot"    "byte"
    }

    // A message
    "lod_msg"
    {
        "playerID"      "byte"
        "msg"           "string"
    }

    // A slave vote is being passed
    "lod_slave"
    {
        // The option that is being changed
        "opt"           "short"

        // The new value for it
        "nv"           "short"
    }

    // Server is sending info on the decoding number
    "lod_decode"
    {
        // The player it related to
        "playerID"      "byte"

        // The encoded number that only this player can decode
        "code"          "short"

        // This player's team
        "team"          "byte"
    }

    // The game state
    "lod_state"
    {
        // PlayerID --> Slot
        "0"             "byte"
        "1"             "byte"
        "2"             "byte"
        "3"             "byte"
        "4"             "byte"
        "5"             "byte"
        "6"             "byte"
        "7"             "byte"
        "8"             "byte"
        "9"             "byte"

        // Each player's selected skills, encoded as a number
        // The number is the index into abilities.kv
        "01"            "short"
        "02"            "short"
        "03"            "short"
        "04"            "short"
        "05"            "short"
        "06"            "short"

        "11"            "short"
        "12"            "short"
        "13"            "short"
        "14"            "short"
        "15"            "short"
        "16"            "short"

        "21"            "short"
        "22"            "short"
        "23"            "short"
        "24"            "short"
        "25"            "short"
        "26"            "short"

        "31"            "short"
        "32"            "short"
        "33"            "short"
        "34"            "short"
        "35"            "short"
        "36"            "short"

        "41"            "short"
        "42"            "short"
        "43"            "short"
        "44"            "short"
        "45"            "short"
        "46"            "short"

        "51"            "short"
        "52"            "short"
        "53"            "short"
        "54"            "short"
        "55"            "short"
        "56"            "short"

        "61"            "short"
        "62"            "short"
        "63"            "short"
        "64"            "short"
        "65"            "short"
        "66"            "short"

        "71"            "short"
        "72"            "short"
        "73"            "short"
        "74"            "short"
        "75"            "short"
        "76"            "short"

        "81"            "short"
        "82"            "short"
        "83"            "short"
        "84"            "short"
        "85"            "short"
        "86"            "short"

        "91"            "short"
        "92"            "short"
        "93"            "short"
        "94"            "short"
        "95"            "short"
        "96"            "short"

        // Bans
        "b"            "string"

        // Heroes this player can pick skills from, seperated by |
        "s0"            "string"
        "s1"            "string"
        "s2"            "string"
        "s3"            "string"
        "s4"            "string"
        "s5"            "string"
        "s6"            "string"
        "s7"            "string"
        "s8"            "string"
        "s9"            "string"
    }

    // Stat collection
    "stat_collection_part"
    {
        "data"          "string"
    }

    "stat_collection_send"
    {
    }

    // Fired to tell clients who is considered the host
    "lh_hostid"
    {
        "hostID"       "byte"  // The ID of the player who is the host
    }
}
